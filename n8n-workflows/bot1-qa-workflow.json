{
  "name": "Bot 1: Q&A Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "qa-bot",
        "responseMode": "responseNode"
      },
      "id": "qa-webhook",
      "name": "Q&A Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [200, 300]
    },
    {
      "parameters": {
        "jsCode": "// Process user message and check for pricing keywords\nconst { userMessage, conversationHistory = [], sessionId } = $json;\n\n// Check for pricing keywords\nconst pricingKeywords = ['price', 'cost', 'budget', 'rate', 'fee', 'billing', 'payment', 'quote', 'how much', 'pricing', 'expensive', 'cheap', 'afford', 'money', 'dollar'];\n\nconst isPricingQuery = pricingKeywords.some(keyword => \n  userMessage.toLowerCase().includes(keyword)\n);\n\nif (isPricingQuery) {\n  return {\n    response: 'For pricing and quotes, please contact our team for personalized consultation.',\n    suggestedQuestions: [\n      'Schedule consultation with your team',\n      'What factors affect pricing?', \n      'Ready to define my project instead',\n      'Contact your team directly'\n    ],\n    requiresTeamConsultation: true\n  };\n}\n\n// Count exchanges for transition detection\nconst exchangeCount = conversationHistory.length / 2;\nconst shouldTransition = exchangeCount >= 5;\n\nreturn {\n  userMessage,\n  conversationHistory,\n  sessionId,\n  exchangeCount,\n  shouldTransition,\n  isPricingQuery: false\n};"
      },
      "id": "message-processor",
      "name": "Process Message",
      "type": "n8n-nodes-base.code", 
      "position": [400, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.isPricingQuery }}",
              "value2": true
            }
          ]
        }
      },
      "id": "pricing-check",
      "name": "Pricing Check",
      "type": "n8n-nodes-base.if",
      "position": [600, 300]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create", 
        "model": "gpt-3.5-turbo",
        "messages": {
          "messages": [
            {
              "role": "system",
              "content": "You are a business Q&A expert for m8s. Answer questions about services, process, team, and capabilities. Keep responses to 2-3 sentences. NEVER discuss pricing - always redirect to team consultation.\n\nKnowledge:\n- Services: AI-powered development team with human architect oversight\n- Team: AI agents + elite human architects from Unit 8200\n- Process: 1) Project Discovery 2) Architect Review 3) AI Development 4) Delivery\n- Tech: React, Node.js, Python, AI/ML integration, cloud deployment\n\nIf shouldTransition is true, add: 'Ready to explore a project? I can switch you to project discovery mode.'"
            },
            {
              "role": "user", 
              "content": "{{ $json.userMessage }}\n\nContext: {{ $json.exchangeCount }} exchanges, shouldTransition: {{ $json.shouldTransition }}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 200
        }
      },
      "id": "openai-response",
      "name": "Generate Response",
      "type": "n8n-nodes-base.openAi",
      "position": [800, 400],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Format final response with suggested questions\nconst llmResponse = $json.choices[0].message.content;\nconst context = $('message-processor').first().json;\n\nlet suggestedQuestions;\n\nif (context.shouldTransition) {\n  suggestedQuestions = [\n    'Yes, let\\'s define my project',\n    'Tell me more about your process first',\n    'What information do you need?',\n    'I\\'d like to speak with your team'\n  ];\n} else {\n  suggestedQuestions = [\n    'How does your development process work?',\n    'Who are your human architects?',\n    'What technologies do you specialize in?',\n    'Can you show me example projects?'\n  ];\n}\n\nreturn {\n  response: llmResponse,\n  suggestedQuestions,\n  requiresTeamConsultation: false,\n  exchangeCount: context.exchangeCount,\n  shouldTransition: context.shouldTransition\n};"
      },
      "id": "response-formatter",
      "name": "Format Response", 
      "type": "n8n-nodes-base.code",
      "position": [1000, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify($json) }}"
      },
      "id": "send-response",
      "name": "Send Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [1200, 350]
    }
  ],
  "connections": {
    "Q&A Webhook": {
      "main": [
        [
          {
            "node": "Process Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Message": {
      "main": [
        [
          {
            "node": "Pricing Check", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pricing Check": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main", 
            "index": 0
          }
        ],
        [
          {
            "node": "Generate Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Response": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    }
  }
}